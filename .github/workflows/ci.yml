name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - master
  schedule:
    - cron: "0 3 * * 0" # every Sunday at 3am

env:
  CI: true

jobs:
  tests:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: Base Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - "14"
          - "16"
    steps:
      - uses: actions/checkout@v2
      - uses: volta-cli/action@v2
        with:
          node-version: ${{ matrix.node }}

      - run: yarn install

      - name: Test with ${{ matrix.node }}
        run: yarn ember test

#  floating-dependencies:
#    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
#    name: Floating Dependencies
#    timeout-minutes: 5
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node:
#          - "12"
#          - "14"
#
#    steps:
#      - uses: actions/checkout@v2
#      - uses: volta-cli/action@v1
#        with:
#          node-version: ${{ matrix.node }}
#
#      - run: yarn install --no-lockfile
#
#      - name: Test with Node ${{ matrix.node }}
#        run: yarn ember test

  try-scenarios:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: "Compatibility"
    timeout-minutes: 7
    runs-on: ubuntu-latest
    needs: tests

    strategy:
      fail-fast: true
      matrix:
        ember-try-scenario:
          - ember-3.25
          - ember-3.28-lts
          - ember-release
          - ember-beta
          - ember-canary
          # - embroider-safe
          # - embroider-optimized
    steps:
      - uses: actions/checkout@v2
      - uses: volta-cli/action@v2
        with:
          node-version: 14.x
      - name: install dependencies
        run: yarn install
      - name: test
        run: node_modules/.bin/ember try:one ${{ matrix.ember-try-scenario }} --skip-cleanup

  publish:
    name: Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: [tests, try-scenarios]

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: volta-cli/action@v2
      - run: yarn install

      - name: Release
        run: yarn semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
